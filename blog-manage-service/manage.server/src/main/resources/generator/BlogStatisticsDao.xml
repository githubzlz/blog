<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generate.BlogStatisticsDao">
  <resultMap id="BaseResultMap" type="generate.BlogStatistics">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="stars" jdbcType="BIGINT" property="stars" />
    <result column="goods" jdbcType="BIGINT" property="goods" />
    <result column="comments" jdbcType="BIGINT" property="comments" />
    <result column="readings" jdbcType="BIGINT" property="readings" />
    <result column="collect" jdbcType="BIGINT" property="collect" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="last_modifier" jdbcType="BIGINT" property="lastModifier" />
    <result column="last_modified_time" jdbcType="TIMESTAMP" property="lastModifiedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, blog_id, stars, goods, comments, readings, `collect`, creator, created_time, 
    last_modifier, last_modified_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_statistics
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_statistics
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="generate.BlogStatistics" useGeneratedKeys="true">
    insert into blog_statistics (blog_id, stars, goods, 
      comments, readings, `collect`, 
      creator, created_time, last_modifier, 
      last_modified_time)
    values (#{blogId,jdbcType=BIGINT}, #{stars,jdbcType=BIGINT}, #{goods,jdbcType=BIGINT}, 
      #{comments,jdbcType=BIGINT}, #{readings,jdbcType=BIGINT}, #{collect,jdbcType=BIGINT}, 
      #{creator,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{lastModifier,jdbcType=BIGINT}, 
      #{lastModifiedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="generate.BlogStatistics" useGeneratedKeys="true">
    insert into blog_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="stars != null">
        stars,
      </if>
      <if test="goods != null">
        goods,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="readings != null">
        readings,
      </if>
      <if test="collect != null">
        `collect`,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="lastModifier != null">
        last_modifier,
      </if>
      <if test="lastModifiedTime != null">
        last_modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="stars != null">
        #{stars,jdbcType=BIGINT},
      </if>
      <if test="goods != null">
        #{goods,jdbcType=BIGINT},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=BIGINT},
      </if>
      <if test="readings != null">
        #{readings,jdbcType=BIGINT},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifier != null">
        #{lastModifier,jdbcType=BIGINT},
      </if>
      <if test="lastModifiedTime != null">
        #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="generate.BlogStatistics">
    update blog_statistics
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=BIGINT},
      </if>
      <if test="stars != null">
        stars = #{stars,jdbcType=BIGINT},
      </if>
      <if test="goods != null">
        goods = #{goods,jdbcType=BIGINT},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=BIGINT},
      </if>
      <if test="readings != null">
        readings = #{readings,jdbcType=BIGINT},
      </if>
      <if test="collect != null">
        `collect` = #{collect,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifier != null">
        last_modifier = #{lastModifier,jdbcType=BIGINT},
      </if>
      <if test="lastModifiedTime != null">
        last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="generate.BlogStatistics">
    update blog_statistics
    set blog_id = #{blogId,jdbcType=BIGINT},
      stars = #{stars,jdbcType=BIGINT},
      goods = #{goods,jdbcType=BIGINT},
      comments = #{comments,jdbcType=BIGINT},
      readings = #{readings,jdbcType=BIGINT},
      `collect` = #{collect,jdbcType=BIGINT},
      creator = #{creator,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_modifier = #{lastModifier,jdbcType=BIGINT},
      last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>