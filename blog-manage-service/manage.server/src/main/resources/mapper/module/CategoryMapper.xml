<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlz.blog.server.category.mapper.CategoryMapper">
  <resultMap id="BaseResultMap" type="com.zlz.blog.common.entity.category.Category">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="is_publish" jdbcType="BOOLEAN" property="isPublish" />
    <result column="parent_id" property="parentId"/>
    <result column="level" property="level"/>
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="last_modifier" jdbcType="BIGINT" property="lastModifier" />
    <result column="last_modified_time" jdbcType="TIMESTAMP" property="lastModifiedTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, title, introduction, image_url, is_publish, creator, created_time, last_modifier, parent_id, `level`,
    last_modified_time
  </sql>

  <select id="selectPage" resultMap="BaseResultMap">
    SELECT
        <include refid="Base_Column_List"></include>,
        (
            SELECT count(1) FROM category c WHERE c.parent_id = cate.id AND c.is_deleted = 0
        ) AS isLastLevel,
        (
            SELECT count(1) FROM category c WHERE c.level_code REGEXP  CONCAT('^',cate.level_code, '[0-9]+$') AND c.is_deleted = 0
         )AS childCategoryAmountTotal,
        (
            SELECT COUNT(1) FROM category_blog cb WHERE cb.category_id = cate.id
        ) as blogAmount,
        (
            SELECT COUNT(1) FROM category_blog cb WHERE cb.category_id in
            (
                SELECT id FROM category c1 WHERE c1.level_code LIKE CONCAT(cate.level_code, '%') AND c1.is_deleted = 0
            )
        ) as blogAmountTotal
    FROM category cate
    <where>
      cate.level = #{category.level}
      AND cate.parent_id = #{category.parentId}
      AND cate.creator = #{category.creator}
      AND cate.is_deleted = 0
      <if test="null != category and null != category.title">
        AND m.title LIKE CONCAT("%",#{category.title},"%")
     </if>
      <if test="null != category and null != category.introduction">
        AND m.introduction LIKE CONCAT("%",#{category.introduction},"%")
      </if>
    </where>
    ORDER BY id ASC
  </select>

  <select id="selectBlogByCategoryId" resultType="com.zlz.blog.common.entity.blog.Blog">
    SELECT
           cb.blog_id as id, b.title, b.summary
    FROM category_blog cb
    LEFT JOIN blog b
        ON b.id = cb.blog_id
    WHERE
      category_id = #{categoryId}
      AND b.is_deleted = 0
  </select>

  <select id="selectBlogFreedom" resultType="com.zlz.blog.common.entity.blog.Blog">
    SELECT b.id, b.title, b.summary FROM blog b WHERE
      b.user_id = #{userId}
      AND b.id NOT IN (
          SELECT cb.blog_id FROM category_blog cb GROUP BY blog_id
      )
  </select>

  <insert id="insertCategoryBlog">
    INSERT INTO category_blog
        (id, category_id, blog_id)
    VALUES
    <foreach collection="blogs" item="blog" separator=",">
      (
       #{blog.categorBlogId},#{categoryId},#{blog.id}
      )
    </foreach>
  </insert>

    <delete id="deleteCategoryBlog">
    DELETE FROM category_blog WHERE category_id = #{id}
    </delete>
    <select id="getMaxBrolevelCode" resultType="java.lang.String">
        SELECT
            CASE
                MAX( level_code )
                WHEN MAX( level_code ) THEN
                    MAX( level_code ) ELSE CONCAT(( SELECT level_code FROM category cate WHERE cate.id = #{parentId} ) ,'0000')
                END levelCode
        FROM
            category
        WHERE
            parent_id = #{parentId}
    </select>

    <update id="deleteCategoryAndChildren">
        DELETE FROM category WHERE level_code LIKE concat(
            (
                SELECT level_code FROM (SELECT level_code FROM category c WHERE c.id = #{id}) a
            ), '%')
    </update>
    <delete id="deleteCategoryBlogRelation">
        DELETE FROM category_blog WHERE category_id IN (
            SELECT id FROM category WHERE level_code LIKE concat(
                    (
                        SELECT level_code FROM (SELECT level_code FROM category c WHERE c.id = #{id}) a
                    ), '%')
        )
    </delete>
</mapper>